<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API</name>
    </assembly>
    <members>
        <member name="T:API.Controllers.AuthenticationController">
            <summary>
            Controller for authenticating users.
            </summary>
        </member>
        <member name="M:API.Controllers.AuthenticationController.AuthUserByCredentials(Application.Users.DTOs.LoginCredentialsDto,System.Threading.CancellationToken)">
            <summary>
            Authenticating user by credentials.
            </summary>
            <param name="loginCredentialsDto"></param>
            <param name="cancellationToken"></param>
            <response code="200">Token generated.</response>
            <response code="400">List of errors.</response>
            <returns>Token</returns>
        </member>
        <member name="M:API.Controllers.CitiesController.CreateCity(System.String,Microsoft.AspNetCore.Http.IFormFile,System.Threading.CancellationToken)">
            <summary>
            Create a city.
            </summary>
            <param name="cityJson"></param>
            <param name="image"></param>
            <param name="cancellationToken"></param>
            <returns>City</returns>
            <response code="401">Unauthorized to create a city.</response>
            <response code="409">The city is already in the system.</response>
            <response code="200">The created city.</response>
        </member>
        <member name="M:API.Controllers.CitiesController.GetCityById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get a city by id
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <response code="401">Unauthorized.</response>
            <response code="404">City not found.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:API.Controllers.CitiesController.GetCities(System.Threading.CancellationToken,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Get all cities with filtering and pagination options
            </summary>
            <param name="cancellationToken"></param>
            <param name="searchTerm">str</param>
            <param name="sortCol">longitude | latitude | cityName | countryName</param>
            <param name="sortOrder">desc | asc</param>
            <param name="page">int</param>
            <param name="pageSize">defualt is 20, maximum is 50</param>
            <returns>List of cities</returns>
            <response code="401">Unauthorized.</response>
            <response code="200">Success.</response>
        </member>
        <member name="M:API.Controllers.CitiesController.DeleteCityById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a city.
            </summary>
            <param name="cityId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <response code="401">Unauthorized</response>
            <response code="204">Deleted successfully.</response>
            <response code="400">City doesn't exist.</response>
            <response code="403">Authenticated but no permission.</response>
        </member>
        <member name="M:API.Controllers.CitiesController.PatchCity(Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Application.Cities.Dtos.CityDto},System.Guid)">
            <summary>
            Patch a city.
            </summary>
            <param name="patch">JsonDocumentPatch</param>
            <param name="cityId">City Id</param>
            <returns></returns>
            <response code="204">Success</response>
            <response code="404">City not found</response>
            <response code="400">Bad request</response>
        </member>
        <member name="M:API.Controllers.OwnersController.AddOwner(Application.Owners.DTOs.OwnerForCreateDto)">
            <summary>
            Create owner
            </summary>
            <param name="ownerForCreateDto"></param>
            <returns>Owner</returns>
            <response code="400">List of errors.</response>
            <response code="200">The created owner.</response>
        </member>
        <member name="M:API.Controllers.OwnersController.DeleteOwner(System.Guid)">
            <summary>
            Delete an owner
            </summary>
            <param name="ownerId"></param>
            <returns></returns>
            <response code="400">List of errors.</response>
            <response code="204">Successfully deleted.</response>
            <response code="404">Owner not found.</response>
        </member>
        <member name="M:API.Controllers.OwnersController.GetOwners(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Get owners.
            </summary>
            <param name="searchTerm">Used for firstname and lastname searching</param>
            <param name="phoneNumber">Used for phonenumber</param>
            <param name="page"></param>
            <param name="pageSize">Maximum size is 30</param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.OwnersController.PatchOwner(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Application.Owners.DTOs.OwnerDto})">
            <summary>
            Patch a owner
            </summary>
            <param name="ownerId"></param>
            <param name="patchDocument"></param>
            <returns>NoContent</returns>
        </member>
        <member name="T:API.Controllers.UsersController">
            <summary>
            Users endpoints.
            </summary>
        </member>
        <member name="M:API.Controllers.UsersController.AddUser(Application.Users.DTOs.UserForCreateDTO,System.Threading.CancellationToken)">
            <summary>
            Add a user.
            </summary>
            <param name="user">User data to save.</param>
            <param name="cancellationToken"></param>
            <returns>ActionResult</returns>
            <response code="200">Return the added user data.</response>
            <response code="400">List of errors.</response>
        </member>
    </members>
</doc>
